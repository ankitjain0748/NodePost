generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Users {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  createdAt DateTime  @default(now())
  roles     roles     @default(USERS)
  phone     Int
  password  String
  orders    Orders[]  // user ke orders

  reviews   Reviews[] // user ke reviews
}

enum roles {
  USERS
  STAFF
  ADMIN
}


model Products {
  id       Int      @id @default(autoincrement())
  name     String
  price    Float
  content   String 
  quantity   Int 
  categoriesid  Int
  createdAt DateTime @default(now())
  categories Categories @relation(fields :[categoriesid], references :[id])
  orders   Orders[]

}

model Orders {
  id       Int      @id @default(autoincrement())
  userId   Int
  total    Float
    orderStatus OrderStatus @default(PLACED)
  createdAt DateTime @default(now())
  user Users @relation(fields: [userId], references: [id])
  prodcut   Products @relation(fields: [productId], references: [id])
  productId Int
}

enum OrderStatus {
  PLACED
  SHIPPED
  DELIVERED
  CANCELLED
}


model Categories {
  id       Int      @id @default(autoincrement())
  name     String
  createdAt DateTime @default(now())
   products Products[] // back-reference Products ke categories se
}


model Reviews{
    id       Int      @id @default(autoincrement())
    title     String
   content     String
  rating  Int
  userId Int
  status    reviewstatus @default(PENDING)
  user Users @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())

}

enum reviewstatus {
  PENDING
  ACCEPT
  REJECT 
}